{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fde970c",
   "metadata": {},
   "outputs": [],
   "source": [
    "{\n",
    " \"cells\": [\n",
    "  {\n",
    "   \"cell_type\": \"markdown\",\n",
    "   \"metadata\": {},\n",
    "   \"source\": [\n",
    "    \"# Linear Regression\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 1,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"import pandas as pd\\n\",\n",
    "    \"import numpy as np\\n\",\n",
    "    \"import matplotlib.pyplot as plt\\n\",\n",
    "    \"%matplotlib inline\\n\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 2,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"data=pd.read_csv(\\\"insurance.csv\\\")\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 3,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [\n",
    "    {\n",
    "     \"data\": {\n",
    "      \"text/html\": [\n",
    "       \"<div>\\n\",\n",
    "       \"<style scoped>\\n\",\n",
    "       \"    .dataframe tbody tr th:only-of-type {\\n\",\n",
    "       \"        vertical-align: middle;\\n\",\n",
    "       \"    }\\n\",\n",
    "       \"\\n\",\n",
    "       \"    .dataframe tbody tr th {\\n\",\n",
    "       \"        vertical-align: top;\\n\",\n",
    "       \"    }\\n\",\n",
    "       \"\\n\",\n",
    "       \"    .dataframe thead th {\\n\",\n",
    "       \"        text-align: right;\\n\",\n",
    "       \"    }\\n\",\n",
    "       \"</style>\\n\",\n",
    "       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n",
    "       \"  <thead>\\n\",\n",
    "       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n",
    "       \"      <th></th>\\n\",\n",
    "       \"      <th>age</th>\\n\",\n",
    "       \"      <th>sex</th>\\n\",\n",
    "       \"      <th>bmi</th>\\n\",\n",
    "       \"      <th>children</th>\\n\",\n",
    "       \"      <th>smoker</th>\\n\",\n",
    "       \"      <th>region</th>\\n\",\n",
    "       \"      <th>charges</th>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"  </thead>\\n\",\n",
    "       \"  <tbody>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>19</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>27.900</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>16884.92400</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>18</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>33.770</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>2</td>\\n\",\n",
    "       \"      <td>1725.55230</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>2</td>\\n\",\n",
    "       \"      <td>28</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>33.000</td>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>2</td>\\n\",\n",
    "       \"      <td>4449.46200</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>33</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>22.705</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>21984.47061</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>4</td>\\n\",\n",
    "       \"      <td>32</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>28.880</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>3866.85520</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>5</td>\\n\",\n",
    "       \"      <td>31</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>25.740</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>2</td>\\n\",\n",
    "       \"      <td>3756.62160</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>6</td>\\n\",\n",
    "       \"      <td>46</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>33.440</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>2</td>\\n\",\n",
    "       \"      <td>8240.58960</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>7</td>\\n\",\n",
    "       \"      <td>37</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>27.740</td>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>7281.50560</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>8</td>\\n\",\n",
    "       \"      <td>37</td>\\n\",\n",
    "       \"      <td>1</td>\\n\",\n",
    "       \"      <td>29.830</td>\\n\",\n",
    "       \"      <td>2</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>4</td>\\n\",\n",
    "       \"      <td>6406.41070</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"    <tr>\\n\",\n",
    "       \"      <td>9</td>\\n\",\n",
    "       \"      <td>60</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>25.840</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>0</td>\\n\",\n",
    "       \"      <td>3</td>\\n\",\n",
    "       \"      <td>28923.13692</td>\\n\",\n",
    "       \"    </tr>\\n\",\n",
    "       \"  </tbody>\\n\",\n",
    "       \"</table>\\n\",\n",
    "       \"</div>\"\n",
    "      ],\n",
    "      \"text/plain\": [\n",
    "       \"   age  sex     bmi  children  smoker  region      charges\\n\",\n",
    "       \"0   19    0  27.900         0       1       1  16884.92400\\n\",\n",
    "       \"1   18    1  33.770         1       0       2   1725.55230\\n\",\n",
    "       \"2   28    1  33.000         3       0       2   4449.46200\\n\",\n",
    "       \"3   33    1  22.705         0       0       3  21984.47061\\n\",\n",
    "       \"4   32    1  28.880         0       0       3   3866.85520\\n\",\n",
    "       \"5   31    0  25.740         0       0       2   3756.62160\\n\",\n",
    "       \"6   46    0  33.440         1       0       2   8240.58960\\n\",\n",
    "       \"7   37    0  27.740         3       0       3   7281.50560\\n\",\n",
    "       \"8   37    1  29.830         2       0       4   6406.41070\\n\",\n",
    "       \"9   60    0  25.840         0       0       3  28923.13692\"\n",
    "      ]\n",
    "     },\n",
    "     \"execution_count\": 3,\n",
    "     \"metadata\": {},\n",
    "     \"output_type\": \"execute_result\"\n",
    "    }\n",
    "   ],\n",
    "   \"source\": [\n",
    "    \"data.head(10)\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 4,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [\n",
    "    {\n",
    "     \"data\": {\n",
    "      \"text/plain\": [\n",
    "       \"(1338, 7)\"\n",
    "      ]\n",
    "     },\n",
    "     \"execution_count\": 4,\n",
    "     \"metadata\": {},\n",
    "     \"output_type\": \"execute_result\"\n",
    "    }\n",
    "   ],\n",
    "   \"source\": [\n",
    "    \"data.shape\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 5,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [\n",
    "    {\n",
    "     \"name\": \"stdout\",\n",
    "     \"output_type\": \"stream\",\n",
    "     \"text\": [\n",
    "      \"<class 'pandas.core.frame.DataFrame'>\\n\",\n",
    "      \"RangeIndex: 1338 entries, 0 to 1337\\n\",\n",
    "      \"Data columns (total 7 columns):\\n\",\n",
    "      \"age         1338 non-null int64\\n\",\n",
    "      \"sex         1338 non-null int64\\n\",\n",
    "      \"bmi         1338 non-null float64\\n\",\n",
    "      \"children    1338 non-null int64\\n\",\n",
    "      \"smoker      1338 non-null int64\\n\",\n",
    "      \"region      1338 non-null int64\\n\",\n",
    "      \"charges     1338 non-null float64\\n\",\n",
    "      \"dtypes: float64(2), int64(5)\\n\",\n",
    "      \"memory usage: 73.3 KB\\n\"\n",
    "     ]\n",
    "    }\n",
    "   ],\n",
    "   \"source\": [\n",
    "    \"data.info()\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 6,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"X = data.drop('charges', axis=1)\\n\",\n",
    "    \"y = data['charges']\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 7,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"from sklearn.model_selection import train_test_split\\n\",\n",
    "    \"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20)\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 8,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"from sklearn.linear_model import LinearRegression\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 9,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"lrg=LinearRegression()\\n\",\n",
    "    \"lrg.fit(X_train,y_train)\\n\",\n",
    "    \"y_pred=lrg.predict(X_test)\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 10,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": [\n",
    "    \"from sklearn.metrics import r2_score\\n\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": 11,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [\n",
    "    {\n",
    "     \"name\": \"stdout\",\n",
    "     \"output_type\": \"stream\",\n",
    "     \"text\": [\n",
    "      \"R-squared score  0.7330463095489388\\n\"\n",
    "     ]\n",
    "    }\n",
    "   ],\n",
    "   \"source\": [\n",
    "    \"print(\\\"R-squared score \\\",r2_score(y_test,y_pred))\"\n",
    "   ]\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": null,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": []\n",
    "  },\n",
    "  {\n",
    "   \"cell_type\": \"code\",\n",
    "   \"execution_count\": null,\n",
    "   \"metadata\": {},\n",
    "   \"outputs\": [],\n",
    "   \"source\": []\n",
    "  }\n",
    " ],\n",
    " \"metadata\": {\n",
    "  \"kernelspec\": {\n",
    "   \"display_name\": \"Python 3\",\n",
    "   \"language\": \"python\",\n",
    "   \"name\": \"python3\"\n",
    "  },\n",
    "  \"language_info\": {\n",
    "   \"codemirror_mode\": {\n",
    "    \"name\": \"ipython\",\n",
    "    \"version\": 3\n",
    "   },\n",
    "   \"file_extension\": \".py\",\n",
    "   \"mimetype\": \"text/x-python\",\n",
    "   \"name\": \"python\",\n",
    "   \"nbconvert_exporter\": \"python\",\n",
    "   \"pygments_lexer\": \"ipython3\",\n",
    "   \"version\": \"3.7.4\"\n",
    "  }\n",
    " },\n",
    " \"nbformat\": 4,\n",
    " \"nbformat_minor\": 2\n",
    "}"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
